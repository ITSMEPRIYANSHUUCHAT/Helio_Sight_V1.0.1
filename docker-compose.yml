services:
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=solar_db
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  fastapi:
    build:
      context: .
    volumes:
      - ./backend:/app/backend
      - ./requirements.txt:/app/requirements.txt
    depends_on:
      timescaledb:
        condition: service_healthy  # Wait for DB healthy
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - FRONTEND_URL=${FRONTEND_URL}
      - COMPANY_KEY=${COMPANY_KEY}
      - FLASK_ENV=${FLASK_ENV}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - BATCH_SIZE=${BATCH_SIZE}
      - SOLARMAN_EMAIL=${SOLARMAN_EMAIL}
      - SOLARMAN_PASSWORD_SHA256=${SOLARMAN_PASSWORD_SHA256}
      - SOLARMAN_APP_ID=${SOLARMAN_APP_ID}
      - SOLARMAN_APP_SECRET=${SOLARMAN_APP_SECRET}
    ports:
      - "8000:8000"
    command: ["uvicorn", "backend.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    env_file:
      - .env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app/frontend
      - frontend_node_modules:/app/frontend/node_modules
    ports:
      - "3000:3000"
    command: ["npm", "run", "dev"]
    depends_on:
      - fastapi
    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 1g

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - timescaledb
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  redis:
    image: redis:7
    ports:
      - "6379:6379"

volumes:
  timescaledb_data:
  pgadmin_data:
  frontend_node_modules: